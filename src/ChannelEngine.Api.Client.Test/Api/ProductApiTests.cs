/* 
 * ChannelEngine API V2
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.3.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using ChannelEngine.Api.Client.Client;
using ChannelEngine.Api.Client.Api;
using ChannelEngine.Api.Client.Model;

namespace ChannelEngine.Api.Client.Test
{
    /// <summary>
    ///  Class for testing ProductApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ProductApiTests
    {
        private ProductApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ProductApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ProductApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ProductApi
            //Assert.IsInstanceOfType(typeof(ProductApi), instance, "instance is a ProductApi");
        }

        
        /// <summary>
        /// Test ProductAcknowledgeDataChanges
        /// </summary>
        [Test]
        public void ProductAcknowledgeDataChangesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ChannelProcessedChangesRequest changes = null;
            //var response = instance.ProductAcknowledgeDataChanges(changes);
            //Assert.IsInstanceOf<ApiResponse> (response, "response is ApiResponse");
        }
        
        /// <summary>
        /// Test ProductAcknowledgeOfferChanges
        /// </summary>
        [Test]
        public void ProductAcknowledgeOfferChangesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string> changes = null;
            //var response = instance.ProductAcknowledgeOfferChanges(changes);
            //Assert.IsInstanceOf<ApiResponse> (response, "response is ApiResponse");
        }
        
        /// <summary>
        /// Test ProductCreate
        /// </summary>
        [Test]
        public void ProductCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<MerchantProductRequest> products = null;
            //var response = instance.ProductCreate(products);
            //Assert.IsInstanceOf<SingleOfProductCreationResult> (response, "response is SingleOfProductCreationResult");
        }
        
        /// <summary>
        /// Test ProductDelete
        /// </summary>
        [Test]
        public void ProductDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string merchantProductNo = null;
            //var response = instance.ProductDelete(merchantProductNo);
            //Assert.IsInstanceOf<ApiResponse> (response, "response is ApiResponse");
        }
        
        /// <summary>
        /// Test ProductGetByMerchantProductNo
        /// </summary>
        [Test]
        public void ProductGetByMerchantProductNoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string merchantProductNo = null;
            //var response = instance.ProductGetByMerchantProductNo(merchantProductNo);
            //Assert.IsInstanceOf<SingleOfMerchantProductResponse> (response, "response is SingleOfMerchantProductResponse");
        }
        
        /// <summary>
        /// Test ProductGetDataChanges
        /// </summary>
        [Test]
        public void ProductGetDataChangesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? maxCount = null;
            //var response = instance.ProductGetDataChanges(maxCount);
            //Assert.IsInstanceOf<SingleOfChannelProductChangesResponse> (response, "response is SingleOfChannelProductChangesResponse");
        }
        
        /// <summary>
        /// Test ProductGetOfferChanges
        /// </summary>
        [Test]
        public void ProductGetOfferChangesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ProductGetOfferChanges();
            //Assert.IsInstanceOf<CollectionOfChannelOfferResponse> (response, "response is CollectionOfChannelOfferResponse");
        }
        
    }

}
