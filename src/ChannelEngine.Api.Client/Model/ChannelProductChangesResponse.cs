/* 
 * ChannelEngine API V2
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.3.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;

namespace ChannelEngine.Api.Client.Model
{
    /// <summary>
    /// ChannelProductChangesResponse
    /// </summary>
    [DataContract]
    public partial class ChannelProductChangesResponse :  IEquatable<ChannelProductChangesResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ChannelProductChangesResponse" /> class.
        /// </summary>
        /// <param name="ToBeCreated">ToBeCreated.</param>
        /// <param name="ToBeUpdated">ToBeUpdated.</param>
        /// <param name="ToBeRemoved">ToBeRemoved.</param>
        public ChannelProductChangesResponse(List<ChannelProductResponse> ToBeCreated = default(List<ChannelProductResponse>), List<ChannelProductResponse> ToBeUpdated = default(List<ChannelProductResponse>), List<string> ToBeRemoved = default(List<string>))
        {
            this.ToBeCreated = ToBeCreated;
            this.ToBeUpdated = ToBeUpdated;
            this.ToBeRemoved = ToBeRemoved;
        }
        
        /// <summary>
        /// Gets or Sets ToBeCreated
        /// </summary>
        [DataMember(Name="ToBeCreated", EmitDefaultValue=false)]
        public List<ChannelProductResponse> ToBeCreated { get; set; }
        /// <summary>
        /// Gets or Sets ToBeUpdated
        /// </summary>
        [DataMember(Name="ToBeUpdated", EmitDefaultValue=false)]
        public List<ChannelProductResponse> ToBeUpdated { get; set; }
        /// <summary>
        /// Gets or Sets ToBeRemoved
        /// </summary>
        [DataMember(Name="ToBeRemoved", EmitDefaultValue=false)]
        public List<string> ToBeRemoved { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ChannelProductChangesResponse {\n");
            sb.Append("  ToBeCreated: ").Append(ToBeCreated).Append("\n");
            sb.Append("  ToBeUpdated: ").Append(ToBeUpdated).Append("\n");
            sb.Append("  ToBeRemoved: ").Append(ToBeRemoved).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as ChannelProductChangesResponse);
        }

        /// <summary>
        /// Returns true if ChannelProductChangesResponse instances are equal
        /// </summary>
        /// <param name="other">Instance of ChannelProductChangesResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ChannelProductChangesResponse other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.ToBeCreated == other.ToBeCreated ||
                    this.ToBeCreated != null &&
                    this.ToBeCreated.SequenceEqual(other.ToBeCreated)
                ) && 
                (
                    this.ToBeUpdated == other.ToBeUpdated ||
                    this.ToBeUpdated != null &&
                    this.ToBeUpdated.SequenceEqual(other.ToBeUpdated)
                ) && 
                (
                    this.ToBeRemoved == other.ToBeRemoved ||
                    this.ToBeRemoved != null &&
                    this.ToBeRemoved.SequenceEqual(other.ToBeRemoved)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.ToBeCreated != null)
                    hash = hash * 59 + this.ToBeCreated.GetHashCode();
                if (this.ToBeUpdated != null)
                    hash = hash * 59 + this.ToBeUpdated.GetHashCode();
                if (this.ToBeRemoved != null)
                    hash = hash * 59 + this.ToBeRemoved.GetHashCode();
                return hash;
            }
        }

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        { 
            yield break;
        }
    }

}
